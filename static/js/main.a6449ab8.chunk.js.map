{"version":3,"sources":["components/label.js","components/display.js","components/increment.js","resources/actionNames.js","components/decrement.js","components/break.js","resources/blockNames.js","components/session.js","components/startStop.js","components/reset.js","components/timer.js","resources/textResources.js","App.js","serviceWorker.js","resources/formatMinSec.js","resources/decrementFunctions.js","resources/incrementFunctions.js","resources/resetFunctions.js","resources/startStopFunctions.js","reducer.js","store.js","index.js"],"names":["Label","props","className","id","this","idText","text","React","Component","connect","state","dispatch","ownProps","Display","stateValueToTrack","breakLength","sessionLength","timeToDisplay","Increment","onClick","increment","type","valueToIncrement","Decrement","decrement","valueToDecrement","Break","Session","StartStop","startStopFunc","startStopText","Reset","reset","Timer","newProps","shouldBeepPlay","document","getElementById","play","beepHasPlayed","labelText","preload","src","timeLeft","isSessionTimerActive","App","Boolean","window","location","hostname","match","formatMinSec","time","mins","Math","floor","secs","toString","isBreakAndGreaterThanOne","action","isSessionAndGreaterThanOne","isTimeLeftAndGreaterThanZero","currentTime","isTimeLeftAndEqualToZero","decrementBreakLength","decrementSessionLength","decrementTimeLeft","switchBetweenSessionAndBreakTimer","isBreakAndLessThanSixty","isSessionandLessThanSixty","incrementBreakLength","incrementSessionLength","clearIntervalTimer","accurateInterval","clear","resetAudioElement","pause","stopIntervalTimer","isTimerRunning","setupIntervalTimer","interval","scheduledTime","Store","reducer","initialState","DecrementFunctions","IncrementFunctions","ResetFunctions","StartStopFunctions","createStore","ReactDOM","render","store","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a6449ab8.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Label extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <p className=\"label\" id={this.props.idText}>\n        {this.props.text}\n      </p>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = (dispatch, ownProps) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Label);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <p className=\"display\" id={this.props.idText}>\n        {this.props.text}\n      </p>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  if (ownProps.stateValueToTrack == \"breakLength\")\n    return { text: state.breakLength };\n  else if (ownProps.stateValueToTrack == \"sessionLength\")\n    return { text: state.sessionLength };\n  else if (ownProps.stateValueToTrack == \"timeToDisplay\")\n    return { text: state.timeToDisplay };\n};\nconst mapDispatchToProps = (dispatch, ownProps) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as Actions from \"../resources/actionNames\";\n\nclass Increment extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <button\n        id={this.props.idText}\n        className=\"increment-button inc-dec-button\"\n        onClick={this.props.increment}\n      >\n        +\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  increment: () =>\n    dispatch({\n      type: Actions.INCREMENT,\n      valueToIncrement: ownProps.valueToIncrement\n    })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Increment);\n","export const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const STARTSTOP = \"STARTSTOP\";\nexport const RESET = \"RESET\";\nexport const BEEP = \"BEEP\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as Actions from \"../resources/actionNames.js\";\n\nclass Decrement extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <button\n        id={this.props.idText}\n        className=\"decrement-button inc-dec-button\"\n        onClick={this.props.decrement}\n      >\n        -\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  decrement: () =>\n    dispatch({\n      type: Actions.DECREMENT,\n      valueToDecrement: ownProps.valueToDecrement\n    })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Decrement);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Label from \"./label.js\";\nimport Display from \"./display.js\";\nimport Increment from \"./increment.js\";\nimport Decrement from \"./decrement.js\";\nimport * as Blocks from \"../resources/blockNames\";\n\nclass Break extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"break main-block\">\n        <div className=\"break-horizontal-div\">\n          <Decrement\n            idText=\"break-decrement\"\n            valueToDecrement={Blocks.breakBlock}\n          />\n          <div className=\"break-vertical-div\">\n            <Label idText=\"break-label\" text=\"Break Length\" />\n            <Display idText=\"break-length\" stateValueToTrack=\"breakLength\" />\n          </div>\n          <Increment\n            idText=\"break-increment\"\n            valueToIncrement={Blocks.breakBlock}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = (dispatch, ownProps) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Break);\n","export const sessionBlock = \"session\";\nexport const breakBlock = \"break\";\nexport const timeLeft = \"timeLeft\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Label from \"./label.js\";\nimport Display from \"./display.js\";\nimport Increment from \"./increment.js\";\nimport Decrement from \"./decrement.js\";\nimport * as Blocks from \"../resources/blockNames\";\n\nclass Session extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"session main-block\">\n        <div className=\"session-horizontal-div\">\n          <Decrement\n            idText=\"session-decrement\"\n            valueToDecrement={Blocks.sessionBlock}\n          />\n          <div className=\"session-vertical-div\">\n            <Label idText=\"session-label\" text=\"Session Length\" />\n            <Display\n              idText=\"session-length\"\n              stateValueToTrack=\"sessionLength\"\n            />\n          </div>\n          <Increment\n            idText=\"session-increment\"\n            valueToIncrement={Blocks.sessionBlock}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = (dispatch, ownProps) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Session);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as Actions from \"../resources/actionNames\";\n\nclass StartStop extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <button\n        id={this.props.idText}\n        className=\"timer-button\"\n        onClick={this.props.startStopFunc}\n      >\n        {this.props.text}\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  text: state.startStopText\n});\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  startStopFunc: () =>\n    dispatch({\n      type: Actions.STARTSTOP\n    })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartStop);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as Actions from \"../resources/actionNames\";\n\nclass Reset extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <button\n        id={this.props.idText}\n        className=\"timer-button\"\n        onClick={this.props.reset}\n      >\n        Reset\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  reset: () =>\n    dispatch({\n      type: Actions.RESET\n    })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reset);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Label from \"./label.js\";\nimport Display from \"./display.js\";\nimport StartStop from \"./startStop.js\";\nimport Reset from \"./reset.js\";\nimport * as Actions from \"../resources/actionNames\";\nimport * as TextResources from \"../resources/textResources\";\n\nexport const audioId = \"beep\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.shouldBeepPlay) {\n      let sound = document.getElementById(audioId);\n      sound.play();\n      this.props.beepHasPlayed();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"timer main-block\">\n        <Display idText=\"time-left\" stateValueToTrack=\"timeToDisplay\" />\n        <Label\n          idText=\"timer-label\"\n          text={\"Until End of \" + this.props.labelText}\n        />\n        <audio id={audioId} preload=\"auto\" src=\"https://goo.gl/65cBl1\">\n          Your browser does not support embedded audio\n        </audio>\n        <div className=\"timer-button-div\">\n          <StartStop idText=\"start_stop\" />\n          <Reset idText=\"reset\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  timeLeft: state.timeToDisplay,\n  shouldBeepPlay: state.shouldBeepPlay,\n  labelText: state.isSessionTimerActive\n    ? TextResources.timerLabelSession\n    : TextResources.timerLabelBreak\n});\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  beepHasPlayed: () => dispatch({ type: Actions.BEEP })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n","export const startButton = \"Start\";\nexport const stopButton = \"Stop\";\nexport const timerLabelSession = \"Session\";\nexport const timerLabelBreak = \"Break\";\n","import React from \"react\";\nimport \"./styles/App.scss\";\nimport Break from \"./components/break\";\nimport Session from \"./components/session\";\nimport Timer from \"./components/timer\";\n\nfunction App() {\n  return (\n    <div id=\"clock\">\n      <Timer />\n      <div id=\"session-break-container\">\n        <Break />\n        <Session />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default function formatMinSec(time) {\n  let mins = Math.floor(time / 60);\n  let secs = time % 60;\n\n  let minsString = mins < 10 ? \"0\" + mins.toString() : mins.toString();\n  let secsString = secs < 10 ? \"0\" + secs.toString() : secs.toString();\n\n  let minSecString = minsString + \":\" + secsString;\n\n  return minSecString;\n}\n","import * as Blocks from \"./blockNames\";\nimport formatMinSec from \"./formatMinSec\";\n\nexport function isBreakAndGreaterThanOne(state, action) {\n  return action.valueToDecrement == Blocks.breakBlock && state.breakLength > 1;\n}\n\nexport function isSessionAndGreaterThanOne(state, action) {\n  return (\n    action.valueToDecrement == Blocks.sessionBlock && state.sessionLength > 1\n  );\n}\n\nexport function isTimeLeftAndGreaterThanZero(state, action) {\n  return action.valueToDecrement == Blocks.timeLeft && state.currentTime > 0;\n}\n\nexport function isTimeLeftAndEqualToZero(state, action) {\n  return action.valueToDecrement == Blocks.timeLeft && state.currentTime == 0;\n}\n\nexport function decrementBreakLength(state) {\n  let newState = {\n    ...state,\n    breakLength: state.breakLength - 1,\n    currentTime: state.isSessionTimerActive\n      ? state.currentTime\n      : state.currentTime - 60,\n    timeToDisplay: state.isSessionTimerActive\n      ? formatMinSec(state.currentTime)\n      : formatMinSec(state.currentTime - 60)\n  };\n  return newState;\n}\n\nexport function decrementSessionLength(state) {\n  let newState = {\n    ...state,\n    sessionLength: state.sessionLength - 1,\n    currentTime: state.isSessionTimerActive\n      ? state.currentTime - 60\n      : state.currentTime,\n    timeToDisplay: state.isSessionTimerActive\n      ? formatMinSec(state.currentTime - 60)\n      : formatMinSec(state.currentTime)\n  };\n  return newState;\n}\n\nexport function decrementTimeLeft(state) {\n  let newState = {\n    ...state,\n    currentTime: state.currentTime - 1,\n    timeToDisplay: formatMinSec(state.currentTime - 1)\n  };\n  return newState;\n}\n\nexport function switchBetweenSessionAndBreakTimer(state) {\n  let newState = {\n    ...state,\n    isSessionTimerActive: !state.isSessionTimerActive,\n    shouldBeepPlay: true,\n    currentTime: state.isSessionTimerActive\n      ? state.breakLength * 60\n      : state.sessionLength * 60,\n    timeToDisplay: formatMinSec(\n      state.isSessionTimerActive\n        ? state.breakLength * 60\n        : state.sessionLength * 60\n    )\n  };\n  return newState;\n}\n","import * as Blocks from \"./blockNames\";\nimport formatMinSec from \"./formatMinSec\";\n\nexport function isBreakAndLessThanSixty(state, action) {\n  return action.valueToIncrement == Blocks.breakBlock && state.breakLength < 60;\n}\n\nexport function isSessionandLessThanSixty(state, action) {\n  return (\n    action.valueToIncrement == Blocks.sessionBlock && state.sessionLength < 60\n  );\n}\n\nexport function incrementBreakLength(state) {\n  let newState = {\n    ...state,\n    breakLength: state.breakLength + 1,\n    currentTime: state.isSessionTimerActive\n      ? state.currentTime\n      : state.currentTime + 60,\n    timeToDisplay: state.isSessionTimerActive\n      ? formatMinSec(state.currentTime)\n      : formatMinSec(state.currentTime + 60)\n  };\n  return newState;\n}\n\nexport function incrementSessionLength(state) {\n  let newState = {\n    ...state,\n    sessionLength: state.sessionLength + 1,\n    currentTime: state.isSessionTimerActive\n      ? state.currentTime + 60\n      : state.currentTime,\n    timeToDisplay: state.isSessionTimerActive\n      ? formatMinSec(state.currentTime + 60)\n      : formatMinSec(state.currentTime)\n  };\n  return newState;\n}\n","import { audioId } from \"../components/timer\";\n\nexport function clearIntervalTimer(state) {\n  state.accurateInterval && state.accurateInterval.clear();\n}\n\nexport function resetAudioElement() {\n  document.getElementById(audioId).pause();\n  document.getElementById(audioId).currentTime = 0;\n}\n","import Store from \"../store\";\nimport accurateInterval from \"accurate-interval\";\nimport * as Actions from \"./actionNames\";\nimport * as TextResources from \"./textResources\";\nimport * as Blocks from \"./blockNames\";\nimport formatMinSec from \"./formatMinSec\";\n\nexport function stopIntervalTimer(state) {\n  state.accurateInterval && state.accurateInterval.clear();\n\n  let newState = {\n    ...state,\n    timeToDisplay: formatMinSec(state.currentTime),\n    isTimerRunning: false,\n    startStopText: TextResources.startButton\n  };\n\n  return newState;\n}\n\nexport function setupIntervalTimer(state) {\n  let interval = accurateInterval(scheduledTime => {\n    Store.dispatch({\n      type: Actions.DECREMENT,\n      valueToDecrement: Blocks.timeLeft\n    });\n  }, 1000);\n\n  let newState = {\n    ...state,\n    accurateInterval: interval,\n    isTimerRunning: true,\n    startStopText: TextResources.stopButton\n  };\n\n  return newState;\n}\n","import { initialState } from \"./store.js\";\nimport * as Actions from \"./resources/actionNames\";\nimport * as DecrementFunctions from \"./resources/decrementFunctions.js\";\nimport * as IncrementFunctions from \"./resources/incrementFunctions\";\nimport * as ResetFunctions from \"./resources/resetFunctions\";\nimport * as StartStopFunctions from \"./resources/startStopFunctions\";\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Actions.DECREMENT:\n      if (DecrementFunctions.isBreakAndGreaterThanOne(state, action))\n        return DecrementFunctions.decrementBreakLength(state);\n      else if (DecrementFunctions.isSessionAndGreaterThanOne(state, action))\n        return DecrementFunctions.decrementSessionLength(state);\n      else if (DecrementFunctions.isTimeLeftAndGreaterThanZero(state, action))\n        return DecrementFunctions.decrementTimeLeft(state);\n      else if (DecrementFunctions.isTimeLeftAndEqualToZero(state, action))\n        return DecrementFunctions.switchBetweenSessionAndBreakTimer(state);\n      else return state;\n\n    case Actions.INCREMENT:\n      if (IncrementFunctions.isBreakAndLessThanSixty(state, action))\n        return IncrementFunctions.incrementBreakLength(state);\n      else if (IncrementFunctions.isSessionandLessThanSixty(state, action))\n        return IncrementFunctions.incrementSessionLength(state);\n      else return state;\n\n    case Actions.BEEP:\n      return { ...state, shouldBeepPlay: false };\n\n    case Actions.RESET:\n      if (state.isTimerRunning) ResetFunctions.clearIntervalTimer(state);\n      ResetFunctions.resetAudioElement();\n      return initialState;\n\n    case Actions.STARTSTOP:\n      if (state.isTimerRunning) {\n        return StartStopFunctions.stopIntervalTimer(state);\n      } else {\n        return StartStopFunctions.setupIntervalTimer(state);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\nimport * as TextResources from \"./resources/textResources\";\n\nexport const initialState = {\n  sessionLength: 25,\n  breakLength: 5,\n  currentTime: 1500,\n  timeToDisplay: \"25:00\",\n  accurateInterval: \"\",\n  isTimerRunning: false,\n  shouldBeepPlay: false,\n  isSessionTimerActive: true,\n  startStopText: TextResources.startButton\n};\n\nconst Store = createStore(reducer);\nexport default Store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store.js\";\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}